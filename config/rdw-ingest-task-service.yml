# Annotated configuration for RDW Task Service

# Task configuration.
# By default, all tasks are disabled. The tasks are enabled and the root properties are set here
# Tenants have additional configuration properties to set in the tenant-specific application.yml.
#
# The cron syntax is slightly different than standard linux cron syntax. The pattern is a list
# of six single space-separated fields: representing second, minute, hour, day, month, weekday.
# Month and weekday names can be given as the first three letters of the English names.
# Example patterns:
#   0 0 10 * * *           10 AM every day
#   0 0 * * * *            the top of every hour of every day
#   */10 * * * * *         every ten seconds
#   0 0 8-10 * * *         8, 9 and 10 o'clock of every day
#   0 0 6,19 * * *         6:00 AM and 7:00 PM every day
#   0 0/30 8-10 * * *      8:00, 8:30, 9:00, 9:30, 10:00 and 10:30 every day
#   0 0 9-17 * * MON-FRI   on the hour nine-to-five weekdays
#   0 0 0 25 12 ?          every Christmas Day at midnight
# Note that all times are in GMT, regardless of the system's timezone setting.

task:
  # Reconciliation Report configuration.
  # To enable, set the cron property here,
  # then configure tenant-specific behavior under taskSendReconciliationReport
#  send-reconciliation-report:
#    cron: 0 0 12 * * *
#    query: status=PROCESSED&after=-PT24H

  # Update Organizations configuration
  # To enable, set the cron property here,
  # then configure taskUpdateOrganizationsArtClient and taskUpdateOrganizationsImportServiceClient
  # then configure tenant-specific username/password under taskUpdateOrganizationsImportServiceClient
#  update-organizations:
#    cron: 0 0 8 * * *

# Configuration for reconciliation report.
# There is no root (non-tenant) configuration for this task. All settings should be by tenant.
# So this base file will have no active configuration properties, it is here for documentation only.
#taskSendReconciliationReport:
#  tenants:
#    CA:
#      query: status=PROCESSED&after=-PT24H
#      # set log true to log the reconciliation report details
#      log: false
#      # archives may be local file or S3, and may be repeated as needed.
#      # The S3 archive has the same configuration options as an archive service. The uri-root
#      # should be the protocol and bucket, e.g. s3://my-archive-bucket. The AWS access key
#      # should be for a programmatic AWS user. The secret key should be encrypted. The sse
#      # setting is optional and should correspond to the S3 bucket settings.
#      archives:
#        - uri-root: file:///tmp/
#        - uri-root: s3://bucket
#          s3-access-key: AccessKey
#          s3-secret-key: SecretKey
#          s3-region-static: us-west-2
#          s3-sse: AES256

# Configuration for update organizations task.
# The ART client is likely to be instance-specific, i.e. the same for all tenants,
# so all configuration will be in this base file. The OAuth2 credentials may be
# different per tenant, so an example is provided for that but that override would
# be in the tenant application.yml, not here.
#taskUpdateOrganizationsArtClient:
#  groups-of-districts-url: https://art.smarterbalanced.org/rest/groupofdistrict?stateAbbreviation={state}&pageSize=1000
#  districts-url: https://art.smarterbalanced.org/rest/district?stateAbbreviation={state}&pageSize=5000
#  groups-of-schools-url: https://art.smarterbalanced.org/rest/groupofinstitution?stateAbbreviation={state}&pageSize=1000
#  schools-url: https://art.smarterbalanced.org/rest/institution?stateAbbreviation={state}&pageSize=20000
#  status-url: https://art.smarterbalanced.org/rest/status
#  # The credentials should be for a user that has access to the ART REST API
#  oauth2:
#    access-token-uri: https://sso.smarterbalanced.org/auth/oauth2/access_token?realm=/sbac
#    client-id:
#    client-secret:
#    username:
#    password:
#  tenants:
#    CA:
#      oauth2:
#        username:
#        password:

# Configuration for update organizations task.
# The URLs and client credentials are instance-specific, but the user credentials will
# be tenant-specific. An example is given here but the overrides would be in the tenant
# application.yml.
#taskUpdateOrganizationsImportServiceClient:
#  organizations-imports-url: http://import-service/organizations/imports
#  status-url: http://import-status-service/status
#  # The credentials should be for a user that has ASMTDATALOAD privileges for the tenant state
#  oauth2:
#    access-token-uri: https://sso.smarterbalanced.org/auth/oauth2/access_token?realm=/sbac
#    client-id:
#    client-secret:
#  tenants:
#    CA:
#      oauth2:
#        username:
#        password:
