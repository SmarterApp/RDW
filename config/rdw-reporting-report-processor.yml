# Annotated configuration for RDW Report Processor.
#
# The spring application name is rdw-reporting-report-processor so this file should be named
# rdw-reporting-report-processor.yml when served by the configuration server.
#
# Properties that have a reasonable default value are commented out.
# Other properties are not commented out and must be provided.

# The actuator end-point is on a different port with no security because it is expected to be
# exposed only in a private subnet. Use the default settings unless you really know what you
# are doing.
management:
#  port: 8008
#  security:
#    enabled: false
server:
#  port: 8080

# Application configuration
app:
  # Report archive configuration.
  # Although the location may be a local file system the preferred solution is to write to AWS S3,
  # which requires credentials. For S3, the root should be the protocol and the bucket, e.g. s3://my-archive-bucket.
  # The AWS access key should be for a programmatic AWS user. The secretKey should be encrypted.
  # The bucket should be in the same region as the deployment (to reduce costs).
  # There are no default values for these properties and they must be provided.
  archive:
    root:
    cloud:
      aws:
        credentials:
          accessKey:
          secretKey:
        region:
          auto: false
          static: us-west-2

  # PDF Generator configuration.
  # URL should be the internal (private) route which is typically resolved by the orchestration
  # framework's DNS and should include port as necessary, e.g. http://wkhtmltopdf-service:8082.
  wkhtmltopdf:
    url:
#    options:
#      page-size: Letter
#      zoom: 0.75

# Tenant configuration
reporting:
#  state:
#    code: CA
#    name: California

  # By default the system does not allow users to see test results from institutions outside their
  # permissions. Setting this property true allows users to see all test results for students
  # regardless of where the test was administered, if they have PII for the student.
#  transfer-access-enabled: false

  # Location of translation files (optional).
  # There is no default value. To use the central configuration server the value will be like
  # "binary-${spring.cloud.config.uri}/*/*/master/i18n/"
  # Details for this property are covered in the language runbook.
#  translation-location:


# Spring application configuration.
spring:
  # Datasource configuration.
  # Use defaults for most of the settings, except server, username and password.
  # The url-server should be set to the host and port, e.g. localhost:3306 or
  # my-cluster.cluster-cimuvo5urx1e.us-west-2.rds.amazonaws.com:3306.
  datasource:
#    url: "\
#      jdbc:mysql://${spring.datasource.url-server:localhost:3306}/${spring.datasource.url-schema:reporting}\
#      ?useSSL=${spring.datasource.use-ssl:false}\
#      &useLegacyDatetimeCode=${spring.datasource.use-legacy-datetime-code:false}\
#      &characterEncoding=${spring.datasource.character-encoding:utf8}\
#      &rewriteBatchedStatements=${spring.datasource.rewrite-batched-statements:true}\
#      &connectTimeout=${spring.datasource.connect-timeout:10000}\
#      &socketTimeout=${spring.datasource.socket-timeout:130000}\
#      "
#    jdbcInterceptors: "QueryTimeoutInterceptor(queryTimeout=${spring.datasource.query-timeout:120})"
    url-server:
    username:
    password:
#    testWhileIdle: true
#    validationQuery: SELECT 1
#    validationQueryTimeout: 10000
#    driverClassName: com.mysql.jdbc.Driver
#    initialize: false
#    maxActive: 20
#    initialSize: 4
#    maxWait: 10000

  # RabbitMQ configuration.
  # There are no default values. The host must be set based on the orchestration environment
  # e.g. rabbit-service, with appropriate username and password. The password should be encrypted.
  rabbitmq:
    host:
    username:
    password:
