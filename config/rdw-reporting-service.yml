# Annotated configuration for RDW Reporting Service.
#
# The spring application name is rdw-reporting-service so this file should
# be named rdw-reporting-service when served by the configuration server.
#
# Properties that have a reasonable default value are commented out.
# Other properties are not commented out and must be provided.

# The actuator end-point is on a different port with no security because it is
# expected to be exposed only in a private subnet.
management:
#  port: 8008
#  security:
#    enabled: false


# IRiS item files
# root is the root location of the files [ s3://some-bucket/ | file:///itembank/items/ | classpath: ]
# directory is like Item-{0}/ or item-content/bank/items/Item-{0}/
artifacts:
  root:
  exam-item:
    directory:
#    file-name: item-{0}.xml

# AWS credentials are necessary if reading assessment item files from S3
cloud:
  aws:
    credentials:
      accessKey:
      secretKey:
    region:
      auto: false
      static: us-west-2

# Common settings. Normally set in application.yml.
#reporting:
#  school-year: 2019
#  state:
#    code: CA
#    name: California

  # By default the system enables all the student fields for all users.
  # Setting these properties controls which fields will be available.
  # enabled - all users can see the field, default
  # admin - only admins (non-teachers) can see the field; appropriate for sensitive data fields
  # disabled - no users can see the field; intended for fields where source data is not expected
#  student-fields:
#    EconomicDisadvantage: enabled
#    EnglishLanguageAcquisitionStatus: enabled
#    Ethnicity: enabled
#    Gender: enabled
#    IndividualEducationPlan: enabled
#    LimitedEnglishProficiency: enabled
#    MigrantStatus: enabled
#    MilitaryStudentIdentifier: enabled
#    PrimaryLanguage: enabled
#    Section504: enabled

  # By default the system does not allow users to see test results from institutions outside their
  # permissions. Setting this property true allows users to see all test results for students
  # regardless of where the test was administered, if they have PII for the student.
#  transfer-access-enabled: false

# Server configuration.
# Use the defaults unless you really know what you're doing.
server:
#  tomcat:
#    max-connections: 0
#    max-threads: 4
#    accept-count: 10
#  compression:
#    enabled: true
#    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,text/csv

# Datasource configuration.
datasources:
  # Use defaults for most of the settings except server, username and password.
  # The url-server should be set to the host and port, e.g. localhost:3306 or
  # my-cluster.cluster-cimuvo5urx1e.us-west-2.rds.amazonaws.com:3306.
  # The password should be encrypted.
  reporting_ro:
#    url-parts:
#      protocol: "jdbc:mysql:"
#      hosts: "${datasources.reporting_ro.url-server:localhost:3306}"
#      database: "${datasources.reporting_ro.url-schema:reporting}"
#      properties: "useSSL=${datasources.reporting_ro.use-ssl:false}\
#                   &useLegacyDatetimeCode=${datasources.reporting_ro.use-legacy-datetime-code:false}\
#                   &characterEncoding=${datasources.reporting_ro.character-encoding:utf8}\
#                   &rewriteBatchedStatements=${datasources.reporting_ro.rewrite-batched-statements:true}\
#                   &connectTimeout=${datasources.reporting_ro.connect-timeout:10000}\
#                   &socketTimeout=${datasources.reporting_ro.socket-timeout:40000}\
#                   "
#    url: "${datasources.reporting_ro.url-parts.protocol}//${datasources.reporting_ro.url-parts.hosts}/${datasources.reporting_ro.url-parts.database}?${datasources.reporting_ro.url-parts.properties}"
#    jdbcInterceptors: "QueryTimeoutInterceptor(queryTimeout=${datasources.reporting_ro.query-timeout:30})"
    url-server:
    username:
    password:
#    testWhileIdle: true
#    validationQuery: SELECT 1
#    validationQueryTimeout: 10000
#    driverClassName: com.mysql.jdbc.Driver
#    initialize: false
#    initialSize: 4
#    maxActive: 10
#    minIdle: ${datasources.reporting_ro.initialSize}
#    maxIdle: ${datasources.reporting_ro.maxActive}
#    removeAbandoned: false
#    removeAbandonedTimeout: 60
#    logAbandoned: false

  reporting_rw:
#    url-parts:
#      protocol: "jdbc:mysql:"
#      hosts: "${datasources.reporting_rw.url-server:localhost:3306}"
#      database: "${datasources.reporting_rw.url-schema:reporting}"
#      properties: "useSSL=${datasources.reporting_rw.use-ssl:false}\
#                   &useLegacyDatetimeCode=${datasources.reporting_rw.use-legacy-datetime-code:false}\
#                   &characterEncoding=${datasources.reporting_rw.character-encoding:utf8}\
#                   &rewriteBatchedStatements=${datasources.reporting_rw.rewrite-batched-statements:true}\
#                   &useCompression=${datasources.reporting_rw.use-compression:true}\
#                   &connectTimeout=${datasources.reporting_rw.connect-timeout:10000}\
#                   &socketTimeout=${datasources.reporting_rw.socket-timeout:40000}\
#                   "
#    url: "${datasources.reporting_rw.url-parts.protocol}//${datasources.reporting_rw.url-parts.hosts}/${datasources.reporting_rw.url-parts.database}?${datasources.reporting_rw.url-parts.properties}"
#    jdbcInterceptors: "QueryTimeoutInterceptor(queryTimeout=${datasources.reporting_rw.query-timeout:30})"
    url-server:
    username:
    password:
#    testWhileIdle: true
#    validationQuery: SELECT 1
#    validationQueryTimeout: 10000
#    driverClassName: com.mysql.jdbc.Driver
#    initialize: false
#    initialSize: 4
#    maxActive: 10
#    minIdle: ${datasources.reporting_rw.initialSize}
#    maxIdle: ${datasources.reporting_rw.maxActive}
#    removeAbandoned: false
#    removeAbandonedTimeout: 60
#    logAbandoned: false
