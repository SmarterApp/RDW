# Annotated configuration for RDW Reporting Service.
#
# The spring application name is rdw-reporting-service so this file should
# be named rdw-reporting-service when served by the configuration server.
#
# Properties that have a reasonable default value are commented out.
# Other properties are not commented out and must be provided.

# The actuator end-point is on a different port with no security because it is
# expected to be exposed only in a private subnet.
management:
#  port: 8008
#  security:
#    enabled: false


# IRiS item files
# root is the root location of the files [ s3://some-bucket/ | file:///itembank/items/ | classpath: ]
# directory is like Item-{0}/ or item-content/bank/items/Item-{0}/
artifacts:
  root:
  exam-item:
    directory:
#    file-name: item-{0}.xml

# AWS credentials are necessary if reading assessment item files from S3
cloud:
  aws:
    credentials:
      accessKey:
      secretKey:
    region:
      auto: false
      static: us-west-2

# Tenant configuration
reporting:
#  state:
#    code: CA
#    name: California

  # By default the system does not allow users to see test results from institutions outside their
  # permissions. Setting this property true allows users to see all test results for students
  # regardless of where the test was administered, if they have PII for the student.
#  transfer-access-enabled: false


# Server configuration.
# Use the defaults unless you really know what you're doing.
server:
#  tomcat:
#    max-connections: 0
#    max-threads: 4
#    accept-count: 10
#  compression:
#    enabled: true
#    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,text/csv

# Spring application configuration.
spring:
  # Datasource configuration.
  # Use defaults for most of the settings except server, username and password.
  # The url-server should be set to the host and port, e.g. localhost:3306 or
  # my-cluster.cluster-cimuvo5urx1e.us-west-2.rds.amazonaws.com:3306.
  # The password should be encrypted.
  datasource:
#    url: "\
#      jdbc:mysql://${spring.datasource.url-server:localhost:3306}/${spring.datasource.url-schema:reporting}\
#      ?useSSL=${spring.datasource.use-ssl:false}\
#      &useLegacyDatetimeCode=${spring.datasource.use-legacy-datetime-code:false}\
#      &characterEncoding=${spring.datasource.character-encoding:utf8}\
#      &useCompression=${spring.datasource.use-compression:true}\
#      "
    url-server:
    username:
    password:
#    testWhileIdle: true
#    validationQuery: SELECT 1
#    driverClassName: com.mysql.jdbc.Driver
#    initialize: false
#    initialSize: 4
#    maxActive: 10

  writable_datasource:
#    url: "\
#      jdbc:mysql://${spring.writable_datasource.url-server:localhost:3306}/${spring.writable_datasource.url-schema:reporting}\
#      ?useSSL=${spring.writable_datasource.use-ssl:false}\
#      &useLegacyDatetimeCode=${spring.writable_datasource.use-legacy-datetime-code:false}\
#      &characterEncoding=${spring.writable_datasource.character-encoding:utf8}\
#      &rewriteBatchedStatements=${spring.writable_datasource.rewrite-batched-statements:true}\
#      &useCompression=${spring.writable_datasource.use-compression:true}\
#      "
    url-server:
    username:
    password:
#    testWhileIdle: true
#    validationQuery: SELECT 1
#    driverClassName: com.mysql.jdbc.Driver
#    initialize: false
#    initialSize: 4
#    maxActive: 10

