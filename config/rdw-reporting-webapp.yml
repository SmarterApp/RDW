# Annotated configuration for RDW Reporting Web App.
#
# The spring application name is rdw-reporting-webapp so this file should be named
# rdw-reporting-webapp.yml when served by the configuration server.
#
# Properties that have a reasonable default value are commented out.
# Other properties are not commented out and must be provided.

# The actuator end-point is on a different port with no security because it is
# expected to be exposed only in a private subnet.
management:
#  port: 8008
#  security:
#    enabled: false
#  health:
#    redis:
#      enabled: false

# Permission service configuration
# endpoint is probably the public URL, e.g. https://perm.smarterbalanced.org/rest
permissionservice:
#  component: Reporting
  endpoint:

# Tenant configuration
reporting:
  analytics-tracking-id:

#  external-links:
#    interpretive-guide: https://portal.smarterbalanced.org/library/en/reporting-system-interpretive-guide.pdf
#    user-guide: https://portal.smarterbalanced.org/library/en/reporting-system-user-guide.pdf

  # IRiS configuration.
  # The vendor id is provided by SmarterBalanced
  iris-vendor-id:

  # Historical results may not have item level data. This setting controls UI options for items,
  # it should be set to the beginning of the first school year that has item level data.
#  min-item-data-year: 2016

  # Installed language configuration (optional).
  # These are lists of available languages, not including english (which is always available).
  # Details for these properties are covered in the language runbook.
#  report-languages:
#  ui-languages:

#  state:
#    code: CA
#    name: California

  # By default the system does not allow users to see test results from institutions outside their
  # permissions. Setting this property true allows users to see all test results for students
  # regardless of where the test was administered, if they have PII for the student.
#  transfer-access-enabled: false

  # Location of translation files (optional).
  # There is no default value. To use the central configuration server the value will be like
  # "binary-${spring.cloud.config.uri}/*/*/master/i18n/"
  # Details for this property are covered in the language runbook.
#  translation-location:


# SAML/SSO configuration
# The setting of these properties is covered in more detail in the deployment guide.
# The keystore path will be a binary configuration, e.g. 'binary-${spring.cloud.config.uri}/*/*/master/rdw-reporting.jks'
# IDP metadata URL example: 'https://sso.smarterbalanced.org/auth/saml2/jsp/exportmetadata.jsp?realm=/sbac'.
# The passwords should be encrypted.
saml:
  key-store-file:
  key-store-password:
  private-key-entry-alias:
  private-key-entry-password:
  idp-metadata-url:
  sp-entity-id:
  # SAML settings when hosting behind a load balancer or reverse proxy
  # To use this, set enabled to true and set the hostname, e.g. reporting.smarterbalanced.org
  load-balance:
    enabled: false
#    scheme: https
    hostname:
#    context-path: /
#    port: 8080
#    include-server-port: false

# Server configuration.
# Use the defaults unless you really know what you're doing.
server:
#  port: 8080
#  tomcat:
#    max-connections: 0
#    max-threads: 4
#    accept-count: 10
#  compression:
#    enabled: true
#    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,text/csv

# Spring application configuration
spring:
  # Datasource configuration.
  # NOTE: this section changed between 1.0 and 1.1.
  # Use defaults for most of the settings, except server, username and password.
  # The url-server should be set to the host and port, e.g. localhost:3306 or
  # my-cluster.cluster-cimuvo5urx1e.us-west-2.rds.amazonaws.com:3306.
  datasource:
#    url: "\
#      jdbc:mysql://${spring.datasource.url-server:localhost:3306}/${spring.datasource.url-schema:reporting}\
#      ?useSSL=${spring.datasource.use-ssl:false}\
#      &useLegacyDatetimeCode=${spring.datasource.use-legacy-datetime-code:false}\
#      &characterEncoding=${spring.datasource.character-encoding:utf8}\
#      &useCompression=${spring.datasource.use-compression:true}\
#      "
    url-server:
    username:
    password:
#    testWhileIdle: true
#    validationQuery: SELECT 1
#    driverClassName: com.mysql.jdbc.Driver
#    initialize: false
#    initialSize: 4
#    maxActive: 10

  # Session cache configuration.
  # The default is to not cache session data. To enable caching (using redis), set the
  # session.store-type to "redis" and set the redis values
  session:
    store-type:
  redis:
    host:
    port:

# Netflix zuul configuration.
# The URLs must be set to match the environment, e.g. http://admin-service, the other defaults should be fine.
zuul:
#  set-content-length: true
#  FormBodyWrapperFilter:
#    pre: disable
#  host:
#    socket-timeout-millis: 100000
  routes:
    iris:
#      path: /iris/**
      # The URL should be the internal (private) route, e.g. http://internal-[aws-randomization]/iris/
      url:
#      stripPrefix: true
    admin-service:
#      path: /api/admin-service/**
      url:
#      stripPrefix: true
    aggregate-service:
#      path: /api/aggregate-service/**
      url:
#      stripPrefix: true
    report-processor:
#      path: /api/report-processor/**
      url:
#      stripPrefix: true
    reporting-service:
#      path: /api/reporting-service/**
      url:
#      stripPrefix: true
