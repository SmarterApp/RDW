apiVersion: v1
kind: Service
metadata:
  name: admin-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:[aws-randomization]"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
    name: http
  - port: 443
    targetPort: 8080
    name: https
  selector:
    app: admin-server
---
apiVersion: v1
kind: Service
metadata:
  name: admin-status-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8008
  selector:
    app: admin-server
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: admin-deployment
spec:
  replicas: 2
  revisionHistoryLimit: 2
  minReadySeconds: 60
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: admin-server
    spec:
      containers:
      - name: webapp
        image: smarterbalanced/rdw-admin-webapp:1.0.1-RELEASE
        readinessProbe:
          httpGet:
            path: /health
            port: 8008
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 10
          failureThreshold: 3
        resources:
          requests:
            cpu: 200m
            memory: 1G
          limits:
            cpu: 300m
            memory: 1G
        env:
        - name: CONFIG_SERVICE_URL
          value: "http://configuration-service"
        - name: CONFIG_SERVICE_ENABLED
          value: "true"
        ports:
        - containerPort: 8080
        - containerPort: 8008
